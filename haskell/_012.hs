{-
http://projecteuler.net/problem=12

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
-}

euler012 :: Integer
euler012 = head [x | x <- triangleNumbers (500^2), length (divisors x) > 500]

main = putStrLn (show euler012)

-- Returns an infinite sequence of triangle numbers starting at the given number.
-- A triangle number is generated by adding the natural numbers.
-- Ex. The 3rd triangle number is: 1 + 2 + 3 = 6
triangleNumbers :: Integer -> [Integer]
triangleNumbers x = map (\n -> sum [1..n]) [x..]

-- Get all of the divisors of a given number.
-- Ex. `divisors 28` returns [1,2,4,7,14,28]
divisors :: Integer -> [Integer]
divisors n = [x | x <- [1..n], mod n x == 0]
